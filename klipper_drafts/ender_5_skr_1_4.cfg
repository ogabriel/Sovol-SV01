[tmc2208 stepper_x]

uart_pin: P1.10

run_current: 0.800

hold_current: 0.500

stealthchop_threshold: 250



[stepper_x]

step_pin: P2.2

dir_pin: !P2.6

enable_pin: !P2.1

microsteps: 16

rotation_distance: 40

endstop_pin: P1.29

position_endstop: 360

position_min: 0

position_max: 360

homing_speed: 50

homing_retract_dist: 5



[tmc2208 stepper_y]

uart_pin: P1.9

run_current: 0.800

hold_current: 0.500

stealthchop_threshold: 250



[stepper_y]

step_pin: P0.19

dir_pin: !P0.20

enable_pin:! P2.8

microsteps: 16

rotation_distance: 40

endstop_pin: P1.28

position_endstop: 360

position_min: 0

position_max: 360

homing_speed: 50

homing_retract_dist: 5



[tmc2208 stepper_z]

uart_pin: P1.8

run_current: 0.650

hold_current: 0.450

stealthchop_threshold: 30



[stepper_z]

step_pin: P0.22

dir_pin: !P2.11

enable_pin: !P0.21

endstop_pin: probe:z_virtual_endstop

microsteps: 16

rotation_distance: 4

position_min: -2.75

position_max: 410.75

homing_speed: 10.0



[tmc2208 stepper_z1]

uart_pin: P1.1

run_current: 0.650

hold_current: 0.450

stealthchop_threshold: 30



[stepper_z1]

step_pin: P1.15

dir_pin: !P1.14

enable_pin: !P1.16

microsteps: 16

rotation_distance: 4



[tmc2208 extruder]

uart_pin: P1.4

run_current: 0.350

hold_current: 0.250

stealthchop_threshold: 5



[extruder]

step_pin: P2.13

dir_pin: !P0.11

enable_pin: !P2.12

microsteps: 16

rotation_distance: 4.63 ##Change this for your printer. I'm using an orbiter not a BMG ##

nozzle_diameter: 0.400

filament_diameter: 1.750

max_extrude_only_distance: 750.0

max_extrude_only_velocity: 75.0

max_extrude_only_accel: 1000.0

pressure_advance: 0.202

heater_pin: P2.7

sensor_type: EPCOS 100K B57560G104F

sensor_pin: P0.24

control: pid

pid_kp = 26.057

pid_ki = 1.316

pid_kd = 128.982

min_extrude_temp: 15

min_temp: 5

max_temp: 265





[bltouch]

sensor_pin: P0.10 #Probe

control_pin: P2.0 #SERVOS

stow_on_each_sample: False

probe_with_touch_mode: True

set_output_mode: 5V

x_offset: -30.4

y_offset: -0

z_offset: 2.0

speed: 4.0

samples: 2

sample_retract_dist: 3.0



[safe_z_home]

home_xy_position: 180,180

speed: 80.0

z_hop: 10.0

z_hop_speed: 5.0



[bed_mesh]

speed: 120

horizontal_move_z: 5

mesh_min: 5, 5

mesh_max: 314,347

probe_count: 5,5

fade_start: 1

fade_end: 10



[heater_bed]

heater_pin: P2.5

sensor_type: EPCOS 100K B57560G104F

sensor_pin: P0.25

control = pid

pid_kp = 69.343

pid_ki = 1.016

pid_kd = 1183.162

min_temp: 5

max_temp: 140



[fan]

pin: P2.3



[t5uid1]

firmware: dgus_reloaded

machine_name: Ender 5 Plus

#volume: 60

#brightness: 50

z_min: 0

z_max: 410



[mcu]

serial: /dev/serial/by-id/usb-Klipper_lpc1769_** INSERT YOUR MCU ADDRESS HERE **



[printer]

kinematics: cartesian

max_velocity: 200

max_accel: 3000

max_accel_to_decel:3000

max_z_velocity: 10

max_z_accel: 100



[screws_tilt_adjust]

screw1: 60,40

screw1_name: front_left

screw2: 325,40

screw2_name: front_right

screw3: 60,315

screw3_name: back_left

screw4: 325,315

screw4_name: back_right

# Additional bed leveling screws. At least two screws must be

# defined.

speed: 50

horizontal_move_z: 5

screw_thread: CW-M3



[z_tilt]

z_positions: 378.4,180

-18.4,180

# A list of X,Y coordinates (one per line; subsequent lines

# indented) describing the location of each bed "pivot point". The

# "pivot point" is the point where the bed attaches to the given Z

# stepper. It is described using nozzle coordinates (the XY position

# of the nozzle if it could move directly above the point). The

# first entry corresponds to stepper_z, the second to stepper_z1,

# the third to stepper_z2, etc. This parameter must be provided.

points: 360,180

32,180

# A list of X,Y coordinates (one per line; subsequent lines | back |

# indented) that should be probed during a Z_TILT_ADJUST command. | |

# Specify coordinates of the nozzle and be sure the probe is above L z1 z R

# the bed at the given nozzle coordinates. This parameter must be | |

# provided. | front |

speed: 50

horizontal_move_z: 5

retries: 3

# Number of times to retry if the probed points aren't within

# tolerance.

retry_tolerance:0.01

# If retries are enabled then retry if largest and smallest probed

# points differ more than retry_tolerance. Note the smallest unit of

# change here would be a single step. However if you are probing

# more points than steppers then you will likely have a fixed

# minimum value for the range of probed points which you can learn

# by observing command output.



[input_shaper]

shaper_freq_x: 46.36 # frequency for the X mark of the test model

shaper_freq_y: 68.5 # frequency for the Y mark of the test model



#[filament_switch_sensor e0_sensor]

#switch_pin: ar2

#pause_on_runout: False

#runout_gcode:

# M600

[virtual_sdcard]

path: ~/gcode_files



[display_status]



[pause_resume]



[gcode_macro PAUSE]

rename_existing: BASE_PAUSE

default_parameter_X: 360 #edit to your park position

default_parameter_Y: 360 #edit to your park position

default_parameter_Z: 10 #edit to your park position

default_parameter_E: 1 #edit to your retract length

gcode:

SAVE_GCODE_STATE NAME=PAUSE_state

BASE_PAUSE

G91

G1 E-{E} F2100

G1 Z{Z}

G90

G1 X{X} Y{Y} F6000

[gcode_macro RESUME]

rename_existing: BASE_RESUME

default_parameter_E: 1 #edit to your retract length

gcode:

G91

G1 E{E} F2100

G90

RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1

BASE_RESUME

[gcode_macro CANCEL_PRINT]

rename_existing: BASE_CANCEL_PRINT

gcode:

TURN_OFF_HEATERS

CLEAR_PAUSE

SDCARD_RESET_FILE

BASE_CANCEL_PRINT

[respond]

default_type: echo



[gcode_macro G27]

default_parameter_X: 20

default_parameter_Y: 340

default_parameter_Z: 20

gcode:

{% if printer.toolhead.homed_axes != "xyz" %}

{printer.gcode.action_respond_info("Please home XYZ first")}

{% else %}

SAVE_GCODE_STATE NAME=G27_state

G91

G1 Z{Z}

G90

G1 X{X} Y{Y} F3000

RESTORE_GCODE_STATE NAME=G27_state

{% endif %}



[gcode_macro G29]

default_parameter_T: 0

gcode:

{% if printer.toolhead.status == "Printing" %}

{printer.gcode.action_respond_info("This command cannot be used while printing")}

{% elif printer.toolhead.homed_axes != "xyz" %}

{printer.gcode.action_respond_info("Please home XYZ first")}

{% else %}

SAVE_GCODE_STATE NAME=G29_state

G90

G1 Z10 F240

{% if T|int > 30 %}

M190 S{T}

{% endif %}

BED_MESH_CALIBRATE

{% if 'S' in params %}

M140 S{S}

{% endif %}

G90

G1 Z10 F240

G1 X150 Y155 F6000

RESTORE_GCODE_STATE NAME=G29_state

{% endif %}



#[gcode_macro M204]

#rename_existing: M204.1

#default_parameter_F: 0.5

#gcode:

# {% if 'S' in params %}

# SET_VELOCITY_LIMIT ACCEL={S} ACCEL_TO_DECEL={ S|float * F|float }

# {% else %}

# {% if 'P' in params %}

# {% if 'T' in params %}

# {% if P|int < T|int %}

# SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * F|float }

# {% else %}

# SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * F|float }

# {% endif %}

# {% else %}

# SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * F|float }

# {% endif %}

# {% elif 'T' in params %}

# SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * F|float }

# {% endif %}

# {% endif %}



[gcode_macro M205]

gcode:

{% if 'X' in params %}

SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={X}

{% elif 'Y' in params %}

SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={Y}

{% endif %}



[gcode_macro M600]

default_parameter_X: 20

default_parameter_Y: 340

default_parameter_Z: 20

default_parameter_E: 570

gcode:

{% if printer.pause_resume.is_paused %}

{printer.gcode.action_respond_info("Already paused")}

{% elif printer.toolhead.homed_axes != "xyz" %}

{printer.gcode.action_respond_info("Please home XYZ first")}

{% else %}

PAUSE_PARK

M702 U{E}

{% endif %}



[gcode_macro M701]

default_parameter_I: 30

default_parameter_U: 570

default_parameter_P: 30

default_parameter_IF: 180

default_parameter_UF: 360

default_parameter_PF: 180

gcode:

{% if printer.toolhead.status == "Printing" and not printer.pause_resume.is_paused %}

{printer.gcode.action_respond_info("This command cannot be used while printing")}

{% elif printer.extruder.temperature < 170 %}

{printer.gcode.action_respond_info("Extruder temperature too low")}

{% else %}

SAVE_GCODE_STATE NAME=M701_state

M83

{% if I|int > 0 %}

G1 E{I} F{IF}

{% endif %}

G1 E{U} F{UF}

{% if P|int > 0 %}

G1 E{P} F{PF}

{% endif %}

RESTORE_GCODE_STATE NAME=M701_state

{% endif %}



[gcode_macro M702]

default_parameter_P: 8

default_parameter_I: 30

default_parameter_U: 570

default_parameter_PF: 180

default_parameter_IF: 180

default_parameter_UF: 360

gcode:

{% if printer.toolhead.status == "Printing" and not printer.pause_resume.is_paused %}

{printer.gcode.action_respond_info("This command cannot be used while printing")}

{% elif printer.extruder.temperature < 170 %}

{printer.gcode.action_respond_info("Extruder temperature too low")}

{% else %}

SAVE_GCODE_STATE NAME=M702_state

M83

{% if P|int > 0 %}

G1 E{P} F{PF}

{% endif %}

{% if I|int > 0 %}

G1 E-{I} F{IF}

{% endif %}

G1 E-{U} F{UF}

RESTORE_GCODE_STATE NAME=M702_state

{% endif %}



[gcode_macro M900]

gcode:

{% if 'K' in params %}

{% if 'E' in params %}

SET_PRESSURE_ADVANCE EXTRUDER={E} ADVANCE={K}

{% else %}

SET_PRESSURE_ADVANCE ADVANCE={K}

{% endif %}

{% endif %}



[gcode_macro POWEROFF]

gcode:

RESPOND TYPE=command MSG=action:poweroff



[gcode_macro NOTIFY]

gcode:

{% if 'MSG' in params %}

RESPOND TYPE=command MSG="action:notification {MSG}"

{% endif %}



[gcode_macro LAZY_HOME]

gcode:

{% if printer.toolhead.homed_axes != "xyz" %}

G28

{% endif %}



[gcode_macro RETRACT]

default_parameter_F: 600

gcode:

{% if 'D' in params %}

{% if printer.toolhead.status == "Printing" and not printer.pause_resume.is_paused %}

{printer.gcode.action_respond_info("This command cannot be used while printing")}

{% elif printer.extruder.temperature < 170 %}

{printer.gcode.action_respond_info("Extruder temperature too low")}

{% else %}

SAVE_GCODE_STATE NAME=RETRACT_state

M83

G1 E-{D} F{F}

RESTORE_GCODE_STATE NAME=RETRACT_state

{% endif %}

{% endif %}



[gcode_macro PAUSE_PARK]

default_parameter_X: 20

default_parameter_Y: 340

default_parameter_Z: 20

gcode:

{% if printer.pause_resume.is_paused %}

{printer.gcode.action_respond_info("Already paused")}

{% elif printer.toolhead.homed_axes != "xyz" %}

{printer.gcode.action_respond_info("Please home XYZ first")}

{% else %}

PAUSE

RETRACT D=3

G27 X{X} Y{Y} Z{Z}

{% endif %}



[gcode_macro PRE_START]

default_parameter_Z: 0.0

default_parameter_WZ: 0.25

default_parameter_WN: 0.4

gcode:

CLEAR_PAUSE

M106 S0

M220 S100

M221 S100

M900 K0

DGUS_PRINT_START

G28

WIPE_LINE Z={WZ} N={WN}



[gcode_macro POST_END]

gcode:

CLEAR_PAUSE

DGUS_PRINT_END

M220 S100

M221 S100

M900 K0

{% if printer.extruder.temperature >= 170 %}

M83

G91

G1 E-2 F2400

G1 E-2 Z5 F2400

{% endif %}

M82

G90

G27

M104 S0

M140 S0

M106 S0

M84 X Y E

SAVE_IF_SET



[gcode_macro WIPE_LINE]

default_parameter_Z: 0.25

default_parameter_N: 0.4

gcode:

{% if printer.toolhead.homed_axes != "xyz" %}

{printer.gcode.action_respond_info("Please home XYZ first")}

{% elif printer.extruder.temperature < 170 %}

{printer.gcode.action_respond_info("Extruder temperature too low")}

{% else %}

SAVE_GCODE_STATE NAME=WIPE_LINE_state

M82

G90

G92 E0

G1 X10 Y20 Z5 F3000

G1 Z{Z} F3000

G1 X10 Y150 F1500 E10.83

G1 X{ N|float + 10.0 } F5000

G1 Y22 F1500 E21.5

G1 Y20 F5000

RESTORE_GCODE_STATE NAME=WIPE_LINE_state

{% endif %}



[gcode_macro SAVE_AT_END]

variable_save: 0

gcode:

SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1



[gcode_macro SAVE_IF_SET]

gcode:

{% if printer["gcode_macro SAVE_AT_END"].save == 1 %}

SAVE_CONFIG

{% endif %}
